name: publish
on: 
  workflow_dispatch:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - '*'
  release:
    types:
    - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{github.workspace}}/nuget

defaults:
  run:
    shell: pwsh

jobs:
    build:
      runs-on: ubuntu-latest
      
      # Only run on main branch
      if: github.ref == 'refs/heads/main'

      steps:

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: 8.x

      - name: GitVersion Setup
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
            versionSpec: '5.x'
        
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v1.1.1
        id: version
        with:
            useConfigFile: true
            configFilePath: GitVersion.yml
        
      - name: Use the version
        run: |
            echo ${{ env.semVer }}
      
      - name: PWD
        run: |
            pwd
            ls

      - name: Restore
        run: dotnet restore ./src/FlintSoft.Permissions/FlintsSoft.Permissions.csproj

      - name: Build
        run: dotnet build -c Release --no-restore ${{ github.workspace }}/src/FlintSoft.Permissions/FlintsSoft.Permissions.csproj

      - name: Pack
        run: dotnet pack -c Release --no-restore -o ${{ env.NuGetDirectory }} -p:PackageVersion=${{ env.semVer }} ${{ github.workspace }}/src/FlintSoft.Permissions/FlintsSoft.Permissions.csproj

      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{env.NuGetDirectory}}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{secrets.NUGET_APIKEY}}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }